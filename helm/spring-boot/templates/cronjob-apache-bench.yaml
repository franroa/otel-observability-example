{{- $cronJobName := printf "%s-cronjob" (include "app.name" $ | trunc 52) }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ $cronJobName }}
spec:
  schedule: "*/1 * * * *" # run every minute
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 5
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: {{ $cronJobName }}
          annotations:
            profiles.grafana.com/memory.scrape: "true"
            profiles.grafana.com/memory.port: "8080"
            profiles.grafana.com/cpu.scrape: "true"
            profiles.grafana.com/cpu.port: "8080"
            profiles.grafana.com/goroutine.scrape: "true"
            profiles.grafana.com/goroutine.port: "8080"
#         sidecar.opentelemetry.io/inject: "true"
            # instrumentation.opentelemetry.io/inject-java: "true"
            instrumentation.opentelemetry.io/inject-java: "opentelemetry-operator-system/tempo-instrumentation"
        spec:
          containers:
            - name: {{ $cronJobName }}
              image: "docker.io/devth/alpine-bench:0.1"
              args:
                - '-n'
                - '1000' # number of requests
                - '-c'
                - '10' # concurrency
                - '-m'
                - 'POST'
                - {{ printf "http://%s:8080/trigger-me" (include "app.servicename" $) | squote }}
          restartPolicy: OnFailure
      backoffLimit: 2
